'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="oib-ressources-publiques")> _
Partial Public Class storiesDataContext
    Inherits System.Data.Linq.DataContext

    Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertAP_Stories_Module(instance As stories.AP_Stories_Module)
    End Sub
    Partial Private Sub UpdateAP_Stories_Module(instance As stories.AP_Stories_Module)
    End Sub
    Partial Private Sub DeleteAP_Stories_Module(instance As stories.AP_Stories_Module)
    End Sub
    Partial Private Sub InsertAP_Stories_Tag_Meta(instance As stories.AP_Stories_Tag_Meta)
    End Sub
    Partial Private Sub UpdateAP_Stories_Tag_Meta(instance As stories.AP_Stories_Tag_Meta)
    End Sub
    Partial Private Sub DeleteAP_Stories_Tag_Meta(instance As stories.AP_Stories_Tag_Meta)
    End Sub
    Partial Private Sub InsertAP_Story(instance As stories.AP_Story)
    End Sub
    Partial Private Sub UpdateAP_Story(instance As stories.AP_Story)
    End Sub
    Partial Private Sub DeleteAP_Story(instance As stories.AP_Story)
    End Sub
    Partial Private Sub InsertAP_Stories_Tag(instance As stories.AP_Stories_Tag)
    End Sub
    Partial Private Sub UpdateAP_Stories_Tag(instance As stories.AP_Stories_Tag)
    End Sub
    Partial Private Sub DeleteAP_Stories_Tag(instance As stories.AP_Stories_Tag)
    End Sub
#End Region

    Public Sub New()
        MyBase.New(Global.ConvertStoriesTags.My.MySettings.Default.oibConnectionString, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
        MyBase.New(connection, mappingSource)
        OnCreated()
    End Sub

    Public ReadOnly Property AP_Stories_Modules() As System.Data.Linq.Table(Of stories.AP_Stories_Module)
        Get
            Return Me.GetTable(Of stories.AP_Stories_Module)()
        End Get
    End Property

    Public ReadOnly Property AP_Stories_Tag_Metas() As System.Data.Linq.Table(Of stories.AP_Stories_Tag_Meta)
        Get
            Return Me.GetTable(Of stories.AP_Stories_Tag_Meta)()
        End Get
    End Property

    Public ReadOnly Property AP_Stories() As System.Data.Linq.Table(Of stories.AP_Story)
        Get
            Return Me.GetTable(Of stories.AP_Story)()
        End Get
    End Property

    Public ReadOnly Property AP_Stories_Tags() As System.Data.Linq.Table(Of stories.AP_Stories_Tag)
        Get
            Return Me.GetTable(Of stories.AP_Stories_Tag)()
        End Get
    End Property
End Class

Namespace stories

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_Stories_Module")> _
    Partial Public Class AP_Stories_Module
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _StoryModuleId As Integer

        Private _TabModuleId As Integer

        Private _FilterType As Short

        Private _FilterSetting1 As String

        Private _FilterSetting2 As String

        Private _FilterSetting3 As String

        Private _MaxDisplayItems As System.Nullable(Of Short)

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnStoryModuleIdChanging(value As Integer)
        End Sub
        Partial Private Sub OnStoryModuleIdChanged()
        End Sub
        Partial Private Sub OnTabModuleIdChanging(value As Integer)
        End Sub
        Partial Private Sub OnTabModuleIdChanged()
        End Sub
        Partial Private Sub OnFilterTypeChanging(value As Short)
        End Sub
        Partial Private Sub OnFilterTypeChanged()
        End Sub
        Partial Private Sub OnFilterSetting1Changing(value As String)
        End Sub
        Partial Private Sub OnFilterSetting1Changed()
        End Sub
        Partial Private Sub OnFilterSetting2Changing(value As String)
        End Sub
        Partial Private Sub OnFilterSetting2Changed()
        End Sub
        Partial Private Sub OnFilterSetting3Changing(value As String)
        End Sub
        Partial Private Sub OnFilterSetting3Changed()
        End Sub
        Partial Private Sub OnMaxDisplayItemsChanging(value As System.Nullable(Of Short))
        End Sub
        Partial Private Sub OnMaxDisplayItemsChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New()
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoryModuleId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)> _
        Public Property StoryModuleId() As Integer
            Get
                Return Me._StoryModuleId
            End Get
            Set(value As Integer)
                If ((Me._StoryModuleId = value) _
                            = False) Then
                    Me.OnStoryModuleIdChanging(value)
                    Me.SendPropertyChanging()
                    Me._StoryModuleId = value
                    Me.SendPropertyChanged("StoryModuleId")
                    Me.OnStoryModuleIdChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabModuleId", DbType:="Int NOT NULL")> _
        Public Property TabModuleId() As Integer
            Get
                Return Me._TabModuleId
            End Get
            Set(value As Integer)
                If ((Me._TabModuleId = value) _
                            = False) Then
                    Me.OnTabModuleIdChanging(value)
                    Me.SendPropertyChanging()
                    Me._TabModuleId = value
                    Me.SendPropertyChanged("TabModuleId")
                    Me.OnTabModuleIdChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FilterType", DbType:="SmallInt NOT NULL")> _
        Public Property FilterType() As Short
            Get
                Return Me._FilterType
            End Get
            Set(value As Short)
                If ((Me._FilterType = value) _
                            = False) Then
                    Me.OnFilterTypeChanging(value)
                    Me.SendPropertyChanging()
                    Me._FilterType = value
                    Me.SendPropertyChanged("FilterType")
                    Me.OnFilterTypeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FilterSetting1", DbType:="NVarChar(MAX)")> _
        Public Property FilterSetting1() As String
            Get
                Return Me._FilterSetting1
            End Get
            Set(value As String)
                If (String.Equals(Me._FilterSetting1, value) = False) Then
                    Me.OnFilterSetting1Changing(value)
                    Me.SendPropertyChanging()
                    Me._FilterSetting1 = value
                    Me.SendPropertyChanged("FilterSetting1")
                    Me.OnFilterSetting1Changed()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FilterSetting2", DbType:="NVarChar(100)")> _
        Public Property FilterSetting2() As String
            Get
                Return Me._FilterSetting2
            End Get
            Set(value As String)
                If (String.Equals(Me._FilterSetting2, value) = False) Then
                    Me.OnFilterSetting2Changing(value)
                    Me.SendPropertyChanging()
                    Me._FilterSetting2 = value
                    Me.SendPropertyChanged("FilterSetting2")
                    Me.OnFilterSetting2Changed()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FilterSetting3", DbType:="NVarChar(100)")> _
        Public Property FilterSetting3() As String
            Get
                Return Me._FilterSetting3
            End Get
            Set(value As String)
                If (String.Equals(Me._FilterSetting3, value) = False) Then
                    Me.OnFilterSetting3Changing(value)
                    Me.SendPropertyChanging()
                    Me._FilterSetting3 = value
                    Me.SendPropertyChanged("FilterSetting3")
                    Me.OnFilterSetting3Changed()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxDisplayItems", DbType:="SmallInt")> _
        Public Property MaxDisplayItems() As System.Nullable(Of Short)
            Get
                Return Me._MaxDisplayItems
            End Get
            Set(value As System.Nullable(Of Short))
                If (Me._MaxDisplayItems.Equals(value) = False) Then
                    Me.OnMaxDisplayItemsChanging(value)
                    Me.SendPropertyChanging()
                    Me._MaxDisplayItems = value
                    Me.SendPropertyChanged("MaxDisplayItems")
                    Me.OnMaxDisplayItemsChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_Stories_Tag_Meta")> _
    Partial Public Class AP_Stories_Tag_Meta
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _StoryTagMetaId As Long

        Private _StoryId As Integer

        Private _TagId As Integer

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnStoryTagMetaIdChanging(value As Long)
        End Sub
        Partial Private Sub OnStoryTagMetaIdChanged()
        End Sub
        Partial Private Sub OnStoryIdChanging(value As Integer)
        End Sub
        Partial Private Sub OnStoryIdChanged()
        End Sub
        Partial Private Sub OnTagIdChanging(value As Integer)
        End Sub
        Partial Private Sub OnTagIdChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New()
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoryTagMetaId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)> _
        Public Property StoryTagMetaId() As Long
            Get
                Return Me._StoryTagMetaId
            End Get
            Set(value As Long)
                If ((Me._StoryTagMetaId = value) _
                            = False) Then
                    Me.OnStoryTagMetaIdChanging(value)
                    Me.SendPropertyChanging()
                    Me._StoryTagMetaId = value
                    Me.SendPropertyChanged("StoryTagMetaId")
                    Me.OnStoryTagMetaIdChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoryId", DbType:="Int NOT NULL")> _
        Public Property StoryId() As Integer
            Get
                Return Me._StoryId
            End Get
            Set(value As Integer)
                If ((Me._StoryId = value) _
                            = False) Then
                    Me.OnStoryIdChanging(value)
                    Me.SendPropertyChanging()
                    Me._StoryId = value
                    Me.SendPropertyChanged("StoryId")
                    Me.OnStoryIdChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TagId", DbType:="Int NOT NULL")> _
        Public Property TagId() As Integer
            Get
                Return Me._TagId
            End Get
            Set(value As Integer)
                If ((Me._TagId = value) _
                            = False) Then
                    Me.OnTagIdChanging(value)
                    Me.SendPropertyChanging()
                    Me._TagId = value
                    Me.SendPropertyChanged("TagId")
                    Me.OnTagIdChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_Stories")> _
    Partial Public Class AP_Story
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _StoryId As Integer

        Private _Headline As String

        Private _PhotoId As Integer

        Private _StoryText As String

        Private _StoryDate As Date

        Private _Author As String

        Private _EditorBoost As System.Nullable(Of Date)

        Private _Editable As Boolean

        Private _RegionId As System.Nullable(Of Integer)

        Private _UserId As Integer

        Private _IsVisible As Boolean

        Private _Sent As Boolean

        Private _PortalID As Integer

        Private _TabId As System.Nullable(Of Integer)

        Private _TabModuleId As System.Nullable(Of Integer)

        Private _Longitude As System.Nullable(Of Double)

        Private _Latitude As System.Nullable(Of Double)

        Private _TranslationGroup As System.Nullable(Of Integer)

        Private _Language As String

        Private _Subtitle As String

        Private _TextSample As String

        Private _Field1 As String

        Private _Field2 As String

        Private _Field3 As String

        Private _UpdatedDate As System.Nullable(Of Date)

        Private _Keywords As String

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnStoryIdChanging(value As Integer)
        End Sub
        Partial Private Sub OnStoryIdChanged()
        End Sub
        Partial Private Sub OnHeadlineChanging(value As String)
        End Sub
        Partial Private Sub OnHeadlineChanged()
        End Sub
        Partial Private Sub OnPhotoIdChanging(value As Integer)
        End Sub
        Partial Private Sub OnPhotoIdChanged()
        End Sub
        Partial Private Sub OnStoryTextChanging(value As String)
        End Sub
        Partial Private Sub OnStoryTextChanged()
        End Sub
        Partial Private Sub OnStoryDateChanging(value As Date)
        End Sub
        Partial Private Sub OnStoryDateChanged()
        End Sub
        Partial Private Sub OnAuthorChanging(value As String)
        End Sub
        Partial Private Sub OnAuthorChanged()
        End Sub
        Partial Private Sub OnEditorBoostChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnEditorBoostChanged()
        End Sub
        Partial Private Sub OnEditableChanging(value As Boolean)
        End Sub
        Partial Private Sub OnEditableChanged()
        End Sub
        Partial Private Sub OnRegionIdChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnRegionIdChanged()
        End Sub
        Partial Private Sub OnUserIdChanging(value As Integer)
        End Sub
        Partial Private Sub OnUserIdChanged()
        End Sub
        Partial Private Sub OnIsVisibleChanging(value As Boolean)
        End Sub
        Partial Private Sub OnIsVisibleChanged()
        End Sub
        Partial Private Sub OnSentChanging(value As Boolean)
        End Sub
        Partial Private Sub OnSentChanged()
        End Sub
        Partial Private Sub OnPortalIDChanging(value As Integer)
        End Sub
        Partial Private Sub OnPortalIDChanged()
        End Sub
        Partial Private Sub OnTabIdChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnTabIdChanged()
        End Sub
        Partial Private Sub OnTabModuleIdChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnTabModuleIdChanged()
        End Sub
        Partial Private Sub OnLongitudeChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnLongitudeChanged()
        End Sub
        Partial Private Sub OnLatitudeChanging(value As System.Nullable(Of Double))
        End Sub
        Partial Private Sub OnLatitudeChanged()
        End Sub
        Partial Private Sub OnTranslationGroupChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnTranslationGroupChanged()
        End Sub
        Partial Private Sub OnLanguageChanging(value As String)
        End Sub
        Partial Private Sub OnLanguageChanged()
        End Sub
        Partial Private Sub OnSubtitleChanging(value As String)
        End Sub
        Partial Private Sub OnSubtitleChanged()
        End Sub
        Partial Private Sub OnTextSampleChanging(value As String)
        End Sub
        Partial Private Sub OnTextSampleChanged()
        End Sub
        Partial Private Sub OnField1Changing(value As String)
        End Sub
        Partial Private Sub OnField1Changed()
        End Sub
        Partial Private Sub OnField2Changing(value As String)
        End Sub
        Partial Private Sub OnField2Changed()
        End Sub
        Partial Private Sub OnField3Changing(value As String)
        End Sub
        Partial Private Sub OnField3Changed()
        End Sub
        Partial Private Sub OnUpdatedDateChanging(value As System.Nullable(Of Date))
        End Sub
        Partial Private Sub OnUpdatedDateChanged()
        End Sub
        Partial Private Sub OnKeywordsChanging(value As String)
        End Sub
        Partial Private Sub OnKeywordsChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New()
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoryId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)> _
        Public Property StoryId() As Integer
            Get
                Return Me._StoryId
            End Get
            Set(value As Integer)
                If ((Me._StoryId = value) _
                            = False) Then
                    Me.OnStoryIdChanging(value)
                    Me.SendPropertyChanging()
                    Me._StoryId = value
                    Me.SendPropertyChanged("StoryId")
                    Me.OnStoryIdChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Headline", DbType:="NVarChar(154) NOT NULL", CanBeNull:=False)> _
        Public Property Headline() As String
            Get
                Return Me._Headline
            End Get
            Set(value As String)
                If (String.Equals(Me._Headline, value) = False) Then
                    Me.OnHeadlineChanging(value)
                    Me.SendPropertyChanging()
                    Me._Headline = value
                    Me.SendPropertyChanged("Headline")
                    Me.OnHeadlineChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhotoId", DbType:="Int NOT NULL")> _
        Public Property PhotoId() As Integer
            Get
                Return Me._PhotoId
            End Get
            Set(value As Integer)
                If ((Me._PhotoId = value) _
                            = False) Then
                    Me.OnPhotoIdChanging(value)
                    Me.SendPropertyChanging()
                    Me._PhotoId = value
                    Me.SendPropertyChanged("PhotoId")
                    Me.OnPhotoIdChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoryText", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=False)> _
        Public Property StoryText() As String
            Get
                Return Me._StoryText
            End Get
            Set(value As String)
                If (String.Equals(Me._StoryText, value) = False) Then
                    Me.OnStoryTextChanging(value)
                    Me.SendPropertyChanging()
                    Me._StoryText = value
                    Me.SendPropertyChanged("StoryText")
                    Me.OnStoryTextChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoryDate", DbType:="SmallDateTime NOT NULL")> _
        Public Property StoryDate() As Date
            Get
                Return Me._StoryDate
            End Get
            Set(value As Date)
                If ((Me._StoryDate = value) _
                            = False) Then
                    Me.OnStoryDateChanging(value)
                    Me.SendPropertyChanging()
                    Me._StoryDate = value
                    Me.SendPropertyChanged("StoryDate")
                    Me.OnStoryDateChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(50) NOT NULL", CanBeNull:=False)> _
        Public Property Author() As String
            Get
                Return Me._Author
            End Get
            Set(value As String)
                If (String.Equals(Me._Author, value) = False) Then
                    Me.OnAuthorChanging(value)
                    Me.SendPropertyChanging()
                    Me._Author = value
                    Me.SendPropertyChanged("Author")
                    Me.OnAuthorChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EditorBoost", DbType:="SmallDateTime")> _
        Public Property EditorBoost() As System.Nullable(Of Date)
            Get
                Return Me._EditorBoost
            End Get
            Set(value As System.Nullable(Of Date))
                If (Me._EditorBoost.Equals(value) = False) Then
                    Me.OnEditorBoostChanging(value)
                    Me.SendPropertyChanging()
                    Me._EditorBoost = value
                    Me.SendPropertyChanged("EditorBoost")
                    Me.OnEditorBoostChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Editable", DbType:="Bit NOT NULL")> _
        Public Property Editable() As Boolean
            Get
                Return Me._Editable
            End Get
            Set(value As Boolean)
                If ((Me._Editable = value) _
                            = False) Then
                    Me.OnEditableChanging(value)
                    Me.SendPropertyChanging()
                    Me._Editable = value
                    Me.SendPropertyChanged("Editable")
                    Me.OnEditableChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RegionId", DbType:="Int")> _
        Public Property RegionId() As System.Nullable(Of Integer)
            Get
                Return Me._RegionId
            End Get
            Set(value As System.Nullable(Of Integer))
                If (Me._RegionId.Equals(value) = False) Then
                    Me.OnRegionIdChanging(value)
                    Me.SendPropertyChanging()
                    Me._RegionId = value
                    Me.SendPropertyChanged("RegionId")
                    Me.OnRegionIdChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="Int NOT NULL")> _
        Public Property UserId() As Integer
            Get
                Return Me._UserId
            End Get
            Set(value As Integer)
                If ((Me._UserId = value) _
                            = False) Then
                    Me.OnUserIdChanging(value)
                    Me.SendPropertyChanging()
                    Me._UserId = value
                    Me.SendPropertyChanged("UserId")
                    Me.OnUserIdChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsVisible", DbType:="Bit NOT NULL")> _
        Public Property IsVisible() As Boolean
            Get
                Return Me._IsVisible
            End Get
            Set(value As Boolean)
                If ((Me._IsVisible = value) _
                            = False) Then
                    Me.OnIsVisibleChanging(value)
                    Me.SendPropertyChanging()
                    Me._IsVisible = value
                    Me.SendPropertyChanged("IsVisible")
                    Me.OnIsVisibleChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sent", DbType:="Bit NOT NULL")> _
        Public Property Sent() As Boolean
            Get
                Return Me._Sent
            End Get
            Set(value As Boolean)
                If ((Me._Sent = value) _
                            = False) Then
                    Me.OnSentChanging(value)
                    Me.SendPropertyChanging()
                    Me._Sent = value
                    Me.SendPropertyChanged("Sent")
                    Me.OnSentChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalID", DbType:="Int NOT NULL")> _
        Public Property PortalID() As Integer
            Get
                Return Me._PortalID
            End Get
            Set(value As Integer)
                If ((Me._PortalID = value) _
                            = False) Then
                    Me.OnPortalIDChanging(value)
                    Me.SendPropertyChanging()
                    Me._PortalID = value
                    Me.SendPropertyChanged("PortalID")
                    Me.OnPortalIDChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabId", DbType:="Int")> _
        Public Property TabId() As System.Nullable(Of Integer)
            Get
                Return Me._TabId
            End Get
            Set(value As System.Nullable(Of Integer))
                If (Me._TabId.Equals(value) = False) Then
                    Me.OnTabIdChanging(value)
                    Me.SendPropertyChanging()
                    Me._TabId = value
                    Me.SendPropertyChanged("TabId")
                    Me.OnTabIdChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabModuleId", DbType:="Int")> _
        Public Property TabModuleId() As System.Nullable(Of Integer)
            Get
                Return Me._TabModuleId
            End Get
            Set(value As System.Nullable(Of Integer))
                If (Me._TabModuleId.Equals(value) = False) Then
                    Me.OnTabModuleIdChanging(value)
                    Me.SendPropertyChanging()
                    Me._TabModuleId = value
                    Me.SendPropertyChanged("TabModuleId")
                    Me.OnTabModuleIdChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Longitude", DbType:="Float")> _
        Public Property Longitude() As System.Nullable(Of Double)
            Get
                Return Me._Longitude
            End Get
            Set(value As System.Nullable(Of Double))
                If (Me._Longitude.Equals(value) = False) Then
                    Me.OnLongitudeChanging(value)
                    Me.SendPropertyChanging()
                    Me._Longitude = value
                    Me.SendPropertyChanged("Longitude")
                    Me.OnLongitudeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Latitude", DbType:="Float")> _
        Public Property Latitude() As System.Nullable(Of Double)
            Get
                Return Me._Latitude
            End Get
            Set(value As System.Nullable(Of Double))
                If (Me._Latitude.Equals(value) = False) Then
                    Me.OnLatitudeChanging(value)
                    Me.SendPropertyChanging()
                    Me._Latitude = value
                    Me.SendPropertyChanged("Latitude")
                    Me.OnLatitudeChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TranslationGroup", DbType:="Int")> _
        Public Property TranslationGroup() As System.Nullable(Of Integer)
            Get
                Return Me._TranslationGroup
            End Get
            Set(value As System.Nullable(Of Integer))
                If (Me._TranslationGroup.Equals(value) = False) Then
                    Me.OnTranslationGroupChanging(value)
                    Me.SendPropertyChanging()
                    Me._TranslationGroup = value
                    Me.SendPropertyChanged("TranslationGroup")
                    Me.OnTranslationGroupChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Language", DbType:="NVarChar(8)")> _
        Public Property Language() As String
            Get
                Return Me._Language
            End Get
            Set(value As String)
                If (String.Equals(Me._Language, value) = False) Then
                    Me.OnLanguageChanging(value)
                    Me.SendPropertyChanging()
                    Me._Language = value
                    Me.SendPropertyChanged("Language")
                    Me.OnLanguageChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subtitle", DbType:="NVarChar(80)")> _
        Public Property Subtitle() As String
            Get
                Return Me._Subtitle
            End Get
            Set(value As String)
                If (String.Equals(Me._Subtitle, value) = False) Then
                    Me.OnSubtitleChanging(value)
                    Me.SendPropertyChanging()
                    Me._Subtitle = value
                    Me.SendPropertyChanged("Subtitle")
                    Me.OnSubtitleChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TextSample", DbType:="NVarChar(MAX)")> _
        Public Property TextSample() As String
            Get
                Return Me._TextSample
            End Get
            Set(value As String)
                If (String.Equals(Me._TextSample, value) = False) Then
                    Me.OnTextSampleChanging(value)
                    Me.SendPropertyChanging()
                    Me._TextSample = value
                    Me.SendPropertyChanged("TextSample")
                    Me.OnTextSampleChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Field1", DbType:="NVarChar(MAX)")> _
        Public Property Field1() As String
            Get
                Return Me._Field1
            End Get
            Set(value As String)
                If (String.Equals(Me._Field1, value) = False) Then
                    Me.OnField1Changing(value)
                    Me.SendPropertyChanging()
                    Me._Field1 = value
                    Me.SendPropertyChanged("Field1")
                    Me.OnField1Changed()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Field2", DbType:="NVarChar(50)")> _
        Public Property Field2() As String
            Get
                Return Me._Field2
            End Get
            Set(value As String)
                If (String.Equals(Me._Field2, value) = False) Then
                    Me.OnField2Changing(value)
                    Me.SendPropertyChanging()
                    Me._Field2 = value
                    Me.SendPropertyChanged("Field2")
                    Me.OnField2Changed()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Field3", DbType:="NVarChar(50)")> _
        Public Property Field3() As String
            Get
                Return Me._Field3
            End Get
            Set(value As String)
                If (String.Equals(Me._Field3, value) = False) Then
                    Me.OnField3Changing(value)
                    Me.SendPropertyChanging()
                    Me._Field3 = value
                    Me.SendPropertyChanged("Field3")
                    Me.OnField3Changed()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdatedDate", DbType:="SmallDateTime")> _
        Public Property UpdatedDate() As System.Nullable(Of Date)
            Get
                Return Me._UpdatedDate
            End Get
            Set(value As System.Nullable(Of Date))
                If (Me._UpdatedDate.Equals(value) = False) Then
                    Me.OnUpdatedDateChanging(value)
                    Me.SendPropertyChanging()
                    Me._UpdatedDate = value
                    Me.SendPropertyChanged("UpdatedDate")
                    Me.OnUpdatedDateChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keywords", DbType:="NVarChar(100)")> _
        Public Property Keywords() As String
            Get
                Return Me._Keywords
            End Get
            Set(value As String)
                If (String.Equals(Me._Keywords, value) = False) Then
                    Me.OnKeywordsChanging(value)
                    Me.SendPropertyChanging()
                    Me._Keywords = value
                    Me.SendPropertyChanged("Keywords")
                    Me.OnKeywordsChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class

    <Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_Stories_Tags")> _
    Partial Public Class AP_Stories_Tag
        Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged

        Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)

        Private _StoryTagId As Integer

        Private _TagName As String

        Private _PortalId As Integer

        Private _Keywords As String

        Private _Master As Boolean

        Private _StoryModuleId As System.Nullable(Of Integer)

#Region "Extensibility Method Definitions"
        Partial Private Sub OnLoaded()
        End Sub
        Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
        End Sub
        Partial Private Sub OnCreated()
        End Sub
        Partial Private Sub OnStoryTagIdChanging(value As Integer)
        End Sub
        Partial Private Sub OnStoryTagIdChanged()
        End Sub
        Partial Private Sub OnTagNameChanging(value As String)
        End Sub
        Partial Private Sub OnTagNameChanged()
        End Sub
        Partial Private Sub OnPortalIdChanging(value As Integer)
        End Sub
        Partial Private Sub OnPortalIdChanged()
        End Sub
        Partial Private Sub OnKeywordsChanging(value As String)
        End Sub
        Partial Private Sub OnKeywordsChanged()
        End Sub
        Partial Private Sub OnMasterChanging(value As Boolean)
        End Sub
        Partial Private Sub OnMasterChanged()
        End Sub
        Partial Private Sub OnStoryModuleIdChanging(value As System.Nullable(Of Integer))
        End Sub
        Partial Private Sub OnStoryModuleIdChanged()
        End Sub
#End Region

        Public Sub New()
            MyBase.New()
            OnCreated()
        End Sub

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoryTagId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)> _
        Public Property StoryTagId() As Integer
            Get
                Return Me._StoryTagId
            End Get
            Set(value As Integer)
                If ((Me._StoryTagId = value) _
                            = False) Then
                    Me.OnStoryTagIdChanging(value)
                    Me.SendPropertyChanging()
                    Me._StoryTagId = value
                    Me.SendPropertyChanged("StoryTagId")
                    Me.OnStoryTagIdChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TagName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=False)> _
        Public Property TagName() As String
            Get
                Return Me._TagName
            End Get
            Set(value As String)
                If (String.Equals(Me._TagName, value) = False) Then
                    Me.OnTagNameChanging(value)
                    Me.SendPropertyChanging()
                    Me._TagName = value
                    Me.SendPropertyChanged("TagName")
                    Me.OnTagNameChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int NOT NULL")> _
        Public Property PortalId() As Integer
            Get
                Return Me._PortalId
            End Get
            Set(value As Integer)
                If ((Me._PortalId = value) _
                            = False) Then
                    Me.OnPortalIdChanging(value)
                    Me.SendPropertyChanging()
                    Me._PortalId = value
                    Me.SendPropertyChanged("PortalId")
                    Me.OnPortalIdChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keywords", DbType:="NVarChar(MAX)")> _
        Public Property Keywords() As String
            Get
                Return Me._Keywords
            End Get
            Set(value As String)
                If (String.Equals(Me._Keywords, value) = False) Then
                    Me.OnKeywordsChanging(value)
                    Me.SendPropertyChanging()
                    Me._Keywords = value
                    Me.SendPropertyChanged("Keywords")
                    Me.OnKeywordsChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Master", DbType:="Bit NOT NULL")> _
        Public Property Master() As Boolean
            Get
                Return Me._Master
            End Get
            Set(value As Boolean)
                If ((Me._Master = value) _
                            = False) Then
                    Me.OnMasterChanging(value)
                    Me.SendPropertyChanging()
                    Me._Master = value
                    Me.SendPropertyChanged("Master")
                    Me.OnMasterChanged()
                End If
            End Set
        End Property

        <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoryModuleId", DbType:="Int")> _
        Public Property StoryModuleId() As System.Nullable(Of Integer)
            Get
                Return Me._StoryModuleId
            End Get
            Set(value As System.Nullable(Of Integer))
                If (Me._StoryModuleId.Equals(value) = False) Then
                    Me.OnStoryModuleIdChanging(value)
                    Me.SendPropertyChanging()
                    Me._StoryModuleId = value
                    Me.SendPropertyChanged("StoryModuleId")
                    Me.OnStoryModuleIdChanged()
                End If
            End Set
        End Property

        Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging

        Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged

        Protected Overridable Sub SendPropertyChanging()
            If ((Me.PropertyChangingEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
            End If
        End Sub

        Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
            If ((Me.PropertyChangedEvent Is Nothing) _
                        = False) Then
                RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
End Namespace
